@model appEstacionamento.Models.Movimentacoes

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Movimentacoes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.placa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.placa, new { htmlAttributes = new { @readonly = "readonly",  @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.placa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataEntrada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataEntrada, new { htmlAttributes = new { @Value = Model.dataEntrada.ToString("dd/MM/yyyy"),  @readonly = "readonly", @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.dataEntrada, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.horaEntrada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horaEntrada, new { htmlAttributes = new { @readonly = "readonly",  @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horaEntrada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataSaida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataSaida, new { htmlAttributes = new { @Value = Model.dataSaida.ToString("dd/MM/yyyy"), @readonly = "readonly", @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.dataSaida, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.horaSaida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horaSaida, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horaSaida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.duracao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.duracao, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.duracao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tempoCobrado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tempoCobrado, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tempoCobrado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.preco, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.preco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.valorPagar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.valorPagar, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.valorPagar, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.status)
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
